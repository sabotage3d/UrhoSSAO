$#include "Vector2.h"

class Vector2
{
    Vector2();
    Vector2(const Vector2& vector);
    Vector2(float x, float y);
    ~Vector2();
    
    bool operator == (const Vector2& rhs) const;
    Vector2 operator + (const Vector2& rhs) const;
    Vector2 operator - () const;
    Vector2 operator - (const Vector2& rhs) const;
    Vector2 operator * (float rhs) const;
    Vector2 operator * (const Vector2& rhs) const;
    Vector2 operator / (float rhs) const;
    Vector2 operator / (const Vector2& rhs) const;
    Vector2 operator / (const Vector2& rhs) const;

    void Normalize();
    float Length() const;
    float LengthSquared() const;
    float DotProduct(const Vector2& rhs) const;
    float AbsDotProduct(const Vector2& rhs) const;
    Vector2 Abs() const;
    Vector2 Lerp(const Vector2& rhs, float t) const;
    bool Equals(const Vector2& rhs) const;
    bool IsNaN() const;
    
    Vector2 Normalized() const;
    
    String ToString() const;
    
    float x_ @ x;
    float y_ @ y;
    
    static const Vector2 ZERO;
    static const Vector2 LEFT;
    static const Vector2 RIGHT;
    static const Vector2 UP;
    static const Vector2 DOWN;
    static const Vector2 ONE;
};

class IntVector2
{
    IntVector2();
    IntVector2(int x, int y);
    IntVector2(const IntVector2& rhs);
    ~IntVector2();

    bool operator == (const IntVector2& rhs) const;
    IntVector2 operator + (const IntVector2& rhs) const;
    IntVector2 operator - () const;
    IntVector2 operator - (const IntVector2& rhs) const;
    IntVector2 operator * (int rhs) const;
    IntVector2 operator / (int rhs) const;
    IntVector2 operator / (int rhs) const;
    
    String ToString() const;
    
    int x_ @ x;
    int y_ @ y;
    
    static const IntVector2 ZERO;
};
